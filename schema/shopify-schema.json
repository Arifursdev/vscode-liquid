{"title":"JSON Schema for Shopify Settings Schema","$schema":"http://json-schema.org/draft-07/schema#","definitions":{"theme":{"type":"object","required":["name","theme_name","theme_author","theme_version","theme_documentation_url","theme_support_email"],"defaultSnippets":[{"label":"Theme settings","description":"Required theme settings","body":{"name":"$1","theme_name":"$2","theme_author":"$3","theme_version":"$4","theme_documentation_url":"$5","theme_support_email":"$6"}}],"properties":{"name":{"type":"string"},"theme_name":{"type":"string","description":"Name of this Theme"},"theme_author":{"type":"string","description":"The author of this theme"},"theme_version":{"type":"string","description":"Theme version number, eg: 1.0.0"},"theme_documentation_url":{"type":"string","description":"Documentation URL associated with this theme (if applicable)"},"theme_support_email":{"type":"string","description":"The contact theme support email address"}}},"content":{"required":["content"],"type":"object","properties":{"content":{"type":["string"],"title":"Content","description":"Textual content for the header title."},"info":{"title":"Info","description":"Addition Information"}}},"placeholder":{"type":"object","properties":{"placeholder":{"title":"Placeholder","description":"A placeholder value","default":"","oneOf":[{"type":"string"}]}}},"limit":{"type":"object","properties":{"limit":{"type":"number","title":"Limit","description":"The maximum number of items that the merchant can select. The default limit, and the maximum limit you can set, is 50.","maximum":50}}},"select":{"required":["options"],"properties":{"options":{"type":"array","title":"Select Options","description":"Takes an array of value/label definitions for each option in the drop-down","items":{"type":"object","required":["value","label"],"additionalProperties":false,"defaultSnippets":[{"label":"Options","description":"Takes an array of value/label definitions for each option in the drop-down.","body":{"value":"$1","label":"${1/([^_]+)(_*)/${1:/capitalize}${2:+ }/g}$2"}},{"label":"Options with group","description":"Takes an array of value/label definitions for each option in the drop-down with an optional attribute you can add to each option to create option groups in the drop-down","body":{"value":"$1","label":"${1/([^_]+)(_*)/${1:/capitalize}${2:+ }/g}$2","group":"$3"}}],"properties":{"value":{"type":"string","description":"The value of the select options. This will be used as the output"},"label":{"title":"Label","description":"A label to render to the theme editor","oneOf":[{"type":"string"}]},"group":{"title":"Group","description":"An optional attribute you can add to each option to create option groups in the drop-down.","oneOf":[{"type":"string"}]}}}}}},"range":{"required":["min","max","step"],"type":"object","properties":{"step":{"type":"number","title":"Step","minimum":0.1,"default":1,"description":"The step refers to the step count for the slider values. For example, if you set the step to 5, then the range slider will count by fives. By default, the step is set to 1."},"min":{"type":"number","title":"Min","description":"The minimum number of steps"},"max":{"type":"number","title":"Max","description":"The maximum number of steps"},"unit":{"title":"Unit","description":"The unit of measure label. For example, you could use sec for seconds, or px for pixels.","default":"","oneOf":[{"type":"string"}]}}},"radio":{"required":["options"],"type":"object","properties":{"options":{"type":"array","title":"Radio Options","description":"Takes an array of value/label definitions","items":{"type":"object","required":["value","label"],"additionalProperties":false,"defaultSnippets":[{"label":"Radio Options","description":"Value and label definitions","body":{"value":"$1","label":"${2/([^_]+)(_*)/${1:/capitalize}${2:+ }/g}$3"}}],"properties":{"value":{"type":"string"},"label":{"title":"Label","description":"Radio Label","oneOf":[{"type":"string"}]}}}}}},"color_scheme_group":{"required":["min","max","step"],"type":"object","properties":{"definition":{"type":"array","items":{"type":"object","defaultSnippets":[{"label":"Header","description":"A setting of type `header` outputs a header element to help you better organize your input settings.\n","body":{"type":"header","content":"$1","info":"$2"}},{"label":"Color","description":"A setting of type `color` outputs a color picker field. You can use these fields to capture a color selection for various theme elements, such as the body text color.\n\nWhen accessing the value of a color type setting, data is returned as one of the following:\n\n- A [color object](https://shopify.dev/api/liquid/objects/color).\n- `blank`, if no selection has been made.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#color)\n","body":{"id":"$1","label":"${1/([^_]+)(_*)/${1:/capitalize}${2:+ }/g}$2","info":"$3"}},{"label":"Color Background","description":"A setting of type `color_background` outputs a text field for entering [CSS background](https://developer.mozilla.org/en-US/docs/Web/CSS/background) properties. You can use these fields to capture background settings for various theme elements, such as the store background.\n\n> **CAUTION**\n>\n> A Settings of type `color_background` do not support image related background properties.\n\nWhen accessing the value of a `color_background` type setting, data is returned as one of the following:\n\n- A [string](https://shopify.dev/api/liquid/basics/types#string).\n- [nil](https://shopify.dev/api/liquid/basics/types#nil), if nothing has been entered.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#color_background)\n","body":{"id":"$1","label":"${1/([^_]+)(_*)/${1:/capitalize}${2:+ }/g}$2","info":"$3"}}],"properties":{"type":{"type":"string","title":"Type","description":"Name of the type of setting.","oneOf":[{"enum":["header"],"markdownDescription":"A setting of type `header` outputs a header element to help you better organize your input settings.\n"},{"enum":["color"],"title":"Multi-line text areas","markdownDescription":"A setting of type `color` outputs a color picker field. You can use these fields to capture a color selection for various theme elements, such as the body text color.\n\nWhen accessing the value of a color type setting, data is returned as one of the following:\n\n- A [color object](https://shopify.dev/api/liquid/objects/color).\n- `blank`, if no selection has been made.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#color)\n"},{"enum":["color_background"],"title":"Image Picker","markdownDescription":"A setting of type `color_background` outputs a text field for entering [CSS background](https://developer.mozilla.org/en-US/docs/Web/CSS/background) properties. You can use these fields to capture background settings for various theme elements, such as the store background.\n\n> **CAUTION**\n>\n> A Settings of type `color_background` do not support image related background properties.\n\nWhen accessing the value of a `color_background` type setting, data is returned as one of the following:\n\n- A [string](https://shopify.dev/api/liquid/basics/types#string).\n- [nil](https://shopify.dev/api/liquid/basics/types#nil), if nothing has been entered.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#color_background)\n"}]}},"if":{"required":["type"],"type":"object","properties":{"type":{"enum":["color","color_background"]}}},"then":{"required":["id","label"],"properties":{"id":{"type":"string","default":"","markdownDescription":"The setting ID, which is used to access the setting value. The id is exposed to the liquid templates via the settings object. It must only contain alphanumeric characters, underscores, and dashes.\n\n> **REQUIRED**\n>\n> The `id` attribute is required for all settings.\n\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/docs/themes/architecture/settings/input-settings#standard-attributes)\n"},"label":{"markdownDescription":"The setting label, which will show in the theme editor.\n\n> **REQUIRED**\n>\n> The `label` attribute is required for all settings.\n\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/docs/themes/architecture/settings/input-settings#standard-attributes)\n","default":"","oneOf":[{"type":"string"}]},"default":{"type":["string","number","boolean"],"default":"","markdownDescription":"The default value for the setting.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/docs/themes/architecture/settings/input-settings#standard-attributes)\n"},"info":{"markdownDescription":"An option for informational text about the setting. Use sparingly, as it's better to use only informative labels whenever you can.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/docs/themes/architecture/settings/input-settings#standard-attributes)\n","default":"","oneOf":[{"type":"string"}]}}},"else":{"if":{"required":["type"],"type":"object","properties":{"type":{"enum":["header"]}}},"then":{"allOf":[{"$ref":"#/definitions/content"}]}}}},"role":{"type":"object","additionalProperties":true,"markdownDescription":"The `role` field outputs a color scheme preview. The color scheme previews are visible to merchants anywhere in the editor where they might pick a color scheme. You can assign roles to your color scheme definitions to map the color scheme to the previews. For example you can assign `role.background` to the `Background` definition. Role uses the following standardized mapping of the `color_scheme_group` definition to the color scheme preview.\n\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/docs/themes/architecture/settings/input-settings#role)\n"}}},"settings":{"type":"array","markdownDescription":"You can create section specific [settings](https://shopify.dev/themes/architecture/settings/input-settings) to allow merchants to customize the section with the `settings` object:\n\n**Example**\n\n```liquid\n\n{% schema %}\n{\n  \"name\": \"Slideshow\",\n  \"tag\": \"section\",\n  \"class\": \"slideshow\",\n  \"settings\": [\n    {\n      \"type\": \"text\",\n      \"id\": \"header\",\n      \"label\": \"Header\"\n    }\n  ]\n}\n{% endschema %}\n\n```\n\n**[Input Settings](https://shopify.dev/themes/architecture/settings/input-settings)**\n\nInput settings are generally composed of [standard attributes](https://shopify.dev/themes/architecture/settings/input-settings#standard-attributes), and there are two categories:\n\n- [Basic input settings](https://shopify.dev/themes/architecture/settings/input-settings#basic-input-settings)\n- [Specialized input settings](https://shopify.dev/themes/architecture/settings/input-settings#specialized-input-settings)\n\nTo learn how to access the values of these settings for use in your theme, refer to the [settings overview](https://shopify.dev/themes/architecture/settings#access-settings).\n\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings)\n","items":{"type":"object","required":["type"],"defaultSnippets":[{"label":"Text","markdownDescription":"A setting of type `text` outputs a single-line text field. In addition to the [standard attributes](https://shopify.dev/themes/architecture/settings/input-settings#standard-attributes) of an input setting.\n\nWhen accessing the value of a `text` type setting, data is returned as one of the following:\n\n- A [string](https://shopify.dev/api/liquid/basics#types).\n- An [empty object](https://shopify.dev/api/liquid/basics#empty), if nothing has been entered.\n\n#\n\n---\n\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#text)\n\n\n","body":{"type":"text","id":"$2","label":"${2/([^_]+)(_*)/${1:/capitalize}${2:+ }/g}$3","${4|default,placeholder,info|}":"$5"}},{"label":"Textarea","markdownDescription":"A setting of type `textarea` outputs a multi-line text field. In addition to the [standard attributes](https://shopify.dev/themes/architecture/settings/input-settings#standard-attributes) of an input setting.\n\nWhen accessing the value of a `textarea` type setting, data is returned as one of the following:\n\n- A [string](https://shopify.dev/api/liquid/basics#types).\n- An [empty object](https://shopify.dev/api/liquid/basics#empty), if nothing has been entered.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#textarea)\n\n\n","body":{"type":"text","id":"$2","label":"${2/([^_]+)(_*)/${1:/capitalize}${2:+ }/g}$3","${4|default,placeholder,info|}":"$5"}},{"label":"Number","markdownDescription":"A setting of type `number` outputs a single number field. In addition to the [standard attributes](https://shopify.dev/themes/architecture/settings/input-settings#standard-attributes) of an input setting.\n\nWhen accessing the value of a `number` type setting, data is returned as one of the following:\n\n- A [number](https://shopify.dev/api/liquid/basics/types#number).\n- [nil](https://shopify.dev/api/liquid/basics/types#nil), if nothing has been entered.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#number)\n\n\n","body":{"type":"number","id":"$1","label":"${1/([^_]+)(_*)/${1:/capitalize}${2:+ }/g}$2","default":"^$3","${4|placeholder,info|}":"$5"}},{"label":"Checkbox","markdownDescription":"A setting of type `checkbox` outputs a checkbox field. These fields can be used for toggling features on and off, such as whether to show an announcement bar.\n\nWhen accessing the value of a `checkbox` type setting, data is returned as a [boolean](https://shopify.dev/api/liquid/basics/types#boolean).\n\n> **NOTE**\n>\n> If `default` is unspecified, then the value is false by default.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#checkbox)\n\n","body":{"type":"checkbox","id":"$1","label":"${1/([^_]+)(_*)/${1:/capitalize}${2:+ }/g}$2","default":"^${3|true,false|}","info":"$4"}},{"label":"Select","markdownDescription":"A setting of type `select` outputs a drop-down selector field. In addition to the [standard attributes](https://shopify.dev/themes/architecture/settings/input-settings#standard-attributes) of an input setting.\n\nWhen accessing the value of a `select` type setting, data is returned as a [string](https://shopify.dev/api/liquid/basics/types#string).\n\n> **NOTE**\n>\n> If `default` is unspecified, then the first option is selected by default.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#select)\n\n\n","body":{"type":"select","id":"$1","label":"${1/([^_]+)(_*)/${1:/capitalize}${2:+ }/g}$2","default":"$4","info":"$5","options":["^$3"]}},{"label":"Radio","markdownDescription":"A setting of type `radio` outputs a radio option field. In addition to the [standard attributes](https://shopify.dev/themes/architecture/settings/input-settings#standard-attributes) of an input setting, `radio` type settings have a required options attribute that accepts an array of value and label definitions.\n\nYou can use these fields to capture a multi-option selection, such as the alignment of a header logo.\n\nWhen accessing the value of a radio type setting, data is returned as a [string](https://shopify.dev/api/liquid/basics/types#string).\n\n> **NOTE**\n>\n> If `default` is unspecified, then the first option is selected by default.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#radio)\n\n","body":{"type":"radio","id":"$1","label":"${1/([^_]+)(_*)/${1:/capitalize}${2:+ }/g}$2","default":"$4","info":"$5","options":["^$3"]}},{"label":"Range","markdownDescription":"A setting of type `range` outputs a range slider field. In addition to the [standard attributes](https://shopify.dev/themes/architecture/settings/input-settings#standard-attributes) of an input setting.\n\nWhen accessing the value of a `range` type setting, data is returned as a [number](https://shopify.dev/api/liquid/basics/types#number).\n\n> **CAUTION**\n>\n> The `default` attribute is required. The `min`, `max`, `step`, and `default` attributes can't be string values. Failing to adhere results in an error.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#range)\n\n\n","body":{"type":"range","id":"$1","label":"${1/([^_]+)(_*)/${1:/capitalize}${2:+ }/g}$2","min":"^$3","max":"^$4","step":"^$5","unit":"$6","default":"^$7"}},{"label":"Color Scheme Group","markdownDescription":"A setting of type `color_scheme_group` outputs a color scheme which is composed of the following input setting types:\n\n- header\n- color\n- color_background\n\nColor schemes can be added only in `settings_schema.json`.\n","body":{"type":"color_scheme_group","id":"$1","definition":[],"role":{}}}],"properties":{"type":{"type":"string","title":"Type","description":"Name of the type of setting.","oneOf":[{"enum":["text"],"title":"Single-line text fields","markdownDescription":"A setting of type `text` outputs a single-line text field. In addition to the [standard attributes](https://shopify.dev/themes/architecture/settings/input-settings#standard-attributes) of an input setting.\n\nWhen accessing the value of a `text` type setting, data is returned as one of the following:\n\n- A [string](https://shopify.dev/api/liquid/basics#types).\n- An [empty object](https://shopify.dev/api/liquid/basics#empty), if nothing has been entered.\n\n#\n\n---\n\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#text)\n\n\n"},{"enum":["textarea"],"title":"Multi-line text areas","markdownDescription":"A setting of type `textarea` outputs a multi-line text field. In addition to the [standard attributes](https://shopify.dev/themes/architecture/settings/input-settings#standard-attributes) of an input setting.\n\nWhen accessing the value of a `textarea` type setting, data is returned as one of the following:\n\n- A [string](https://shopify.dev/api/liquid/basics#types).\n- An [empty object](https://shopify.dev/api/liquid/basics#empty), if nothing has been entered.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#textarea)\n\n\n"},{"enum":["image_picker"],"title":"Image Picker","markdownDescription":"A setting of type `image_picker` outputs an image picker field that's automatically populated with the available images from the [Files](https://help.shopify.com/en/manual/shopify-admin/productivity-tools/file-uploads) section of Shopify admin, and has the option to upload new images. Merchants also have an opportunity to enter alt text and select a [focal point](https://shopify.dev/themes/architecture/settings/input-settings#image-focal-points) for their image.\n\nYou can use these fields to capture an image selection, such as logos, favicons, and slideshow images.\n\nWhen accessing the value of an `image_picker` type setting, data is returned as one of the following:\n\n- An [image object](https://shopify.dev/api/liquid/objects/image).\n- [nil](https://shopify.dev/api/liquid/basics/types#nil), if either no selection has been made or the selection no longer exists.\n\n> **NOTE**\n>\n> Settings of type `image_picker` are not updated when switching presets. `image_picker` settings also don't support the `default` attribute.\n\n**[Image focal points](https://shopify.dev/themes/architecture/settings/input-settings#image-focal-points)**\n\nImages selected using an `image_picker` setting support focal points. A focal point is a position in an image that the merchant wants to remain in view as the image is cropped and adjusted by the theme. Focal points can be set in the theme editor `image_picker` setting, or from the Files page.\n\nTo make sure that your theme respects the focal point of the image, do the following:\n\n- Render your images using the [image_tag](https://shopify.dev/api/liquid/filters/image_tag) filter.\n- Consider positioning images within containers using `object-fit: cover`.\n\nUsing `image_tag`, if a focal point was provided, then an `object-position` style is added to the image tag, with the value set to the focal point.\n\n**Input**\n\n```liquid\n\n{{ section.settings.image_with_text_image | image_url: width: 1500 | image_tag }}\n\n```\n\n**Output**\n\n```html\n\n<img src=\"octopus-tentacle.jpg?v=1&width=1500\" alt=\"My alt text\"\n srcset=\"octopus-tentacle.jpg?v=1&width=352 352w,\n         octopus-tentacle.jpg?v=1&width=832 832w,\n         octopus-tentacle.jpg?v=1&width=1200 1200w\"\n width=\"1500\" height=\"1875\"\n style=\"object-position:25% 10%;\">\n\n\n```\n\nIf you need override the `object-position` style for a specific use case, then pass a style: `object-position: inherit;` property to the `image_tag` filter.\n\n> **TIP**\n>\n> You can also access the focal point data using [image.presentation.focal_point](https://shopify.dev/api/liquid/objects/image_presentation#image_presentation-focal_point).\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#image_picker)\n"},{"enum":["radio"],"title":"Radio Button","markdownDescription":"A setting of type `radio` outputs a radio option field. In addition to the [standard attributes](https://shopify.dev/themes/architecture/settings/input-settings#standard-attributes) of an input setting, `radio` type settings have a required options attribute that accepts an array of value and label definitions.\n\nYou can use these fields to capture a multi-option selection, such as the alignment of a header logo.\n\nWhen accessing the value of a radio type setting, data is returned as a [string](https://shopify.dev/api/liquid/basics/types#string).\n\n> **NOTE**\n>\n> If `default` is unspecified, then the first option is selected by default.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#radio)\n\n"},{"enum":["select"],"title":"Selection drop-down","markdownDescription":"A setting of type `select` outputs a drop-down selector field. In addition to the [standard attributes](https://shopify.dev/themes/architecture/settings/input-settings#standard-attributes) of an input setting.\n\nWhen accessing the value of a `select` type setting, data is returned as a [string](https://shopify.dev/api/liquid/basics/types#string).\n\n> **NOTE**\n>\n> If `default` is unspecified, then the first option is selected by default.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#select)\n\n\n"},{"enum":["checkbox"],"title":"Checkbox","markdownDescription":"A setting of type `checkbox` outputs a checkbox field. These fields can be used for toggling features on and off, such as whether to show an announcement bar.\n\nWhen accessing the value of a `checkbox` type setting, data is returned as a [boolean](https://shopify.dev/api/liquid/basics/types#boolean).\n\n> **NOTE**\n>\n> If `default` is unspecified, then the value is false by default.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#checkbox)\n\n"},{"enum":["number"],"title":"Number","markdownDescription":"A setting of type `number` outputs a single number field. In addition to the [standard attributes](https://shopify.dev/themes/architecture/settings/input-settings#standard-attributes) of an input setting.\n\nWhen accessing the value of a `number` type setting, data is returned as one of the following:\n\n- A [number](https://shopify.dev/api/liquid/basics/types#number).\n- [nil](https://shopify.dev/api/liquid/basics/types#nil), if nothing has been entered.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#number)\n\n\n"},{"enum":["range"],"title":"Range","markdownDescription":"A setting of type `range` outputs a range slider field. In addition to the [standard attributes](https://shopify.dev/themes/architecture/settings/input-settings#standard-attributes) of an input setting.\n\nWhen accessing the value of a `range` type setting, data is returned as a [number](https://shopify.dev/api/liquid/basics/types#number).\n\n> **CAUTION**\n>\n> The `default` attribute is required. The `min`, `max`, `step`, and `default` attributes can't be string values. Failing to adhere results in an error.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/themes/architecture/settings/input-settings#range)\n\n\n"},{"enum":["color_scheme_group"],"title":"Color Picker","markdownDescription":"A setting of type `color_scheme_group` outputs a color scheme which is composed of the following input setting types:\n\n- header\n- color\n- color_background\n\nColor schemes can be added only in `settings_schema.json`.\n"}]}},"if":{"required":["type"],"type":"object","properties":{"type":{"enum":["text","textarea","radio","select","checkbox","number","range","color_scheme_group"]}}},"then":{"required":["id","label"],"properties":{"id":{"type":"string","default":"","markdownDescription":"The setting ID, which is used to access the setting value. The id is exposed to the liquid templates via the settings object. It must only contain alphanumeric characters, underscores, and dashes.\n\n> **REQUIRED**\n>\n> The `id` attribute is required for all settings.\n\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/docs/themes/architecture/settings/input-settings#standard-attributes)\n"},"label":{"markdownDescription":"The setting label, which will show in the theme editor.\n\n> **REQUIRED**\n>\n> The `label` attribute is required for all settings.\n\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/docs/themes/architecture/settings/input-settings#standard-attributes)\n","default":"","oneOf":[{"type":"string"}]},"default":{"type":["string","number","boolean"],"default":"","markdownDescription":"The default value for the setting.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/docs/themes/architecture/settings/input-settings#standard-attributes)\n"},"info":{"markdownDescription":"An option for informational text about the setting. Use sparingly, as it's better to use only informative labels whenever you can.\n\n#\n\n---\n\n[Shopify Documentation](https://shopify.dev/docs/themes/architecture/settings/input-settings#standard-attributes)\n","default":"","oneOf":[{"type":"string"}]}},"allOf":[{"if":{"required":["type"],"type":"object","properties":{"type":{"const":"range"}}},"then":{"$ref":"#/definitions/range"}},{"if":{"required":["type"],"type":"object","properties":{"type":{"const":"color_scheme_group"}}},"then":{"$ref":"#/definitions/color_scheme_group"}},{"if":{"required":["type"],"type":"object","properties":{"type":{"const":"select"}}},"then":{"$ref":"#/definitions/select"}},{"if":{"required":["type"],"type":"object","properties":{"type":{"const":"radio"}}},"then":{"$ref":"#/definitions/radio"}},{"if":{"required":["type"],"type":"object","properties":{"type":{"enum":["text","textarea"]}}},"then":{"$ref":"#/definitions/placeholder"}}]},"else":{"if":{"required":["type"],"type":"object","properties":{"type":{"enum":["header","paragraph"]}}},"then":{"allOf":[{"$ref":"#/definitions/content"}]}}}}},"type":"array","items":[{"$ref":"#/definitions/theme"},{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"settings":{"$ref":"#/definitions/settings"}}}]}