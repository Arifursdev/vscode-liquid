{
  "name": "Liquid Log",
  "scopeName": "liquid.log",
  "patterns": [
    {
      "name": "punctuation, log.punctuation",
      "match": "\\b(ERROR)\\b(\\:)\\s(.*)",
      "captures": {
        "1": {
          "name": "invalid log.error"
        },
        "2": {
          "name": "punctuation, log.punctuation"
        },
        "3": {
          "name": "invalid log.error"
        }
      }
    },
    {
      "match": "\\bPrettify\\sError\\b",
      "name": "invalid log.error"
    },
    {
      "match": "\\b(\\.liquidrc(\\.json)?|workspace)\\b",
      "name": "constant.language log.constant"
    },
    {
      "match": "\\b([pP]rettify)\\b",
      "name": "keyword.control.flow log.function"
    },
    {
      "match": "(?<=Ignore\\spath\\s(?:created|removed))(:)\\s*(.*)",
      "name": "support.function.filter log.filter",
      "captures": {
        "1": {
          "name": "punctuation.definition.tag log.control"
        },
        "2": {
          "name": "support.function.filter log.path"
        }
      }
    },
    {
      "match": "\\b([lL]iquid(\\-(css|scss|javascript))?|JSONC?|jsonc?|CSS|css|JavaScript|javascript|html|HTML|typescript|jsx|JSX|tsx|TSX|XML|xml)\\b",
      "name": "support.class log.support"
    },
    {
      "match": "\\b([uU]pdated).*",
      "name": "punctuation.definition.tag log.control"
    },
    {
      "match": "\\b([iI]gnoring).*",
      "name": "punctuation.definition.tag log.control"
    },
    {
      "match": "\\b(Using).*\\:?",
      "name": "keyword.control.flow log.function"
    },
    {
      "match": "\\.[0-9]+(ms|s)",
      "name": "constant.language log.constant"
    },
    {
      "include": "text.log"
    }
  ]
}
