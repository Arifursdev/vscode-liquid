{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Liquid",
  "scopeName": "source.liquid",
  "fileTypes": ["liquid", "html", "jekyll"],
  "injections": {
    "L:string - (string.quoted.*.html, string.quoted.single.html)": {
      "patterns": [
        {
          "include": "#tag_block"
        },
        {
          "include": "#tag_output"
        }
      ]
    }
  },
  "patterns": [
    {
      "name": "meta.embedded.html",
      "begin": "<script>",
      "end": "</script>",
      "patterns": [
        {
          "include": "#tag_block"
        },
        {
          "include": "#tag_output"
        }
      ]
    },
    {
      "name": "comment.block.liquid",
      "begin": "{%-?\\s*comment\\s*-?%}",
      "end": "{%-?\\s*endcomment\\s*-?%}"
    },
    {
      "include": "#tag_block"
    },
    {
      "include": "#tag_output"
    },
    {
      "include": "#sections"
    },
    {
      "name": "punctuation.tag.liquid",
      "begin": "---",
      "end": "---",
      "patterns": [
        {
          "include": "source.yaml"
        }
      ]
    },
    {
      "include": "text.html.basic"
    }
  ],
  "repository": {
    "tag_block": {
      "name": "punctuation.tag.liquid",
      "begin": "{%-?",
      "end": "-?%}",
      "patterns": [
        {
          "name": "entity.name.tag.liquid",
          "match": "(?<={%)\\s*(\\w+)"
        },
        {
          "name": "entity.name.tag.liquid",
          "match": "(?<={%-)\\s*(\\w+)"
        },
        {
          "include": "#filters"
        }
      ]
    },
    "tag_output": {
      "name": "punctuation.tag.liquid",
      "begin": "{{-?",
      "end": "-?}}",
      "patterns": [
        {
          "include": "#filters"
        }
      ]
    },
    "entities": {
      "patterns": [
        {
          "name": "constant.character.entity.html",
          "match": "(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)",
          "captures": {
            "1": {
              "name": "punctuation.definition.entity.html"
            },
            "3": {
              "name": "punctuation.definition.entity.html"
            }
          }
        },
        {
          "match": "&",
          "name": "invalid.illegal.bad-ampersand.html"
        }
      ]
    },
    "filters": {
      "patterns": [
        {
          "match": "(\\[)(\\|)(?=[^\\]]*)(?=\\])",
          "captures": {
            "2": {
              "name": "invalid.illegal.filter.liquid"
            },
            "3": {
              "name": "invalid.illegal.filter.liquid"
            }
          }
        },
        {
          "name": "invalid.illegal.filter.liquid",
          "match": "(?<=\\s)(\\+|\\-|\\/|\\*)(?=\\s)"
        },
        {
          "name": "constant.language.liquid",
          "match": "(false|true|nil)"
        },
        {
          "match": "(?=if|unless|elsif)\\s*[^%}]+\\s(in)\\s",
          "captures": {
            "3": {
              "name": "invalid.illegal.operator.liquid"
            }
          }
        },
        {
          "name": "keyword.operator.liquid",
          "match": "\\s+(and|or|not|contains|in|by||((\\!|\\=|\\<|\\>)\\=))\\s+"
        },
        {
          "match": "(?<=assign)([^\\=]+)(\\=\\=+)",
          "captures": {
            "2": {
              "name": "invalid.illegal.assignment.liquid"
            }
          }
        },
        {
          "name": "entity.other.attribute-name.liquid",
          "match": "(\\S+)(?=\\=['\"])"
        },
        {
          "name": "support.function.with-args.liquid",
          "match": "(\\|\\s+|\\s+)(?![\\.0-9])[a-zA-Z0-9_-]+(\\:)(|\\s+)(\\w+)",
          "captures": {
            "1": {
              "name": "entity.name.tag.liquid"
            },
            "4": {
              "patterns": [
                {
                  "name": "variable.parameter.liquid",
                  "match": "[a-zA-Z_]"
                },
                {
                  "name": "constant.numeric.liquid",
                  "match": "[0-9]"
                }
              ]

            }
          }
        },
        {
          "name": "support.function.without-args.liquid",
          "match": "(\\|\\s+|\\s+)(?![\\.0-9])[a-zA-Z0-9_-]+(|\\s+)",
          "captures": {
            "1": {
              "name": "entity.name.tag.liquid"
            }
          }
        },
        {
          "name": "keyword.control.liquid",
          "match": "(?<=\\s)(with|offset\\:|limit\\:)(?=\\s)"
        },
        {
          "name": "invalid.illegal.liquid",
          "match": "(?<=\\s)(\\w+\\:)(?=\\:\\s)"
        },
        {
          "name": "string.quoted.double.liquid",
          "begin": "\"",
          "end": "\""
        },
        {
          "name": "string.quoted.single.liquid",
          "begin": "'",
          "end": "'"
        },
        {
          "name": "constant.numeric.liquid",
          "match": "(-|\\+)?\\s*[0-9]+(\\.[0-9]+)?"
        },
        {
          "name": "support.class.liquid",
          "match": "\\b(collection|product|linklist|linklists|order|link|customer|customer_address|line_item|shop|collections|page_title|template|image|blog|blogs|cart|pages|theme|themes|variant|items|comment|forloop|settings|checkout|shipping_method|transaction|tax_line|form|order|discount|fulfillment|paginate|search|tablerow|schema|style|scripts|request)\\b"
        },
        {
          "name": "support.class.liquid",
          "match": "\\b(assets|block|body_raw|current|item|results|date|excerpt_raw|jekyll|meta|next|page|pages|products|parent|posts|previous|site|tags|taxonomy|url|all_products|country_option_tags)\\b"
        },
        {
          "name": "support.variable.liquid",
          "match": "(?<=\\.)\\w+"
        },
        {
          "name": "variable.other.liquid",
          "match": "\\w+"
        }
      ]
    },
    "sections": {
      "patterns": [
        {
          "name": "meta.attribute.style.html",
          "contentName": "meta.embedded.block.html",
          "begin": "({%)\\s+\\b(style|stylesheet)\\b(?![%}]*%}\\s*$)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.html"
            },
            "2": {
              "name": "entity.name.tag.liquid"
            }
          },
          "end": "({%)\\s+(endstyle|endstylesheet)\\s+(%})",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.html"
            },
            "2": {
              "name": "entity.name.tag.template.html"
            },
            "3": {
              "name": "punctuation.definition.tag.end.html"
            }
          },
          "patterns": [
            {
              "beginCaptures": {
                "1": {
                  "name": "string.quoted.liquid"
                },
                "2": {
                  "name": "punctuation.definition.tag.end.html"
                }
              },
              "begin": "('scss')\\s+(%})",
              "end": "(?=({%)\\s+(endstyle|endstylesheet)\\s+(%}))",
              "patterns": [
                {
                  "include": "source.css.scss"
                }
              ]
            },
            {
              "beginCaptures": {
                "1": {
                  "name": "punctuation.definition.tag.end.html"
                }
              },
              "begin": "(%})",
              "end": "(?=({%)\\s+(endstyle|endstylesheet)\\s+(%}))",
              "patterns": [
                {
                  "include": "source.css"
                }
              ]
            }
          ]
        },
        {
          "name": "meta.embedded.js.html",
          "contentName": "meta.embedded.block.html",
          "begin": "{%\\s+\\b(javascript)\\b\\s+%}",
          "beginCaptures": {
            "1": {
              "name": "entity.name.tag.html"
            }
          },
          "end": "{%\\s+(endjavascript)\\s+%}",
          "endCaptures": {
            "1": {
              "name": "entity.name.tag.html"
            }
          },
          "patterns": [
            {
              "include": "source.js"
            }
          ]
        },
        {
          "name": "meta.embedded.json.html",
          "begin": "{%\\s*(schema)\\s*%}",
          "beginCaptures": {
            "1": {
              "name": "entity.name.tag.liquid"
            }
          },
          "end": "{%\\s*(endschema)\\s*%}",
          "endCaptures": {
            "1": {
              "name": "entity.name.tag.liquid"
            }
          },
          "patterns": [
            {
              "include": "source.json"
            }
          ]
        }
      ]
    }
  },
  "foldingStartMarker": "(?x){%\\s*(if|unless|for|paginate|capture|form|case|tablerow|raw|comment|schema|style|stylesheet|javascript)[^(%})]+%}",
  "foldingStopMarker": "(?x){%\\s*(endif|endunless|endfor|endpaginate|endcapture|endform|endcase|endtablerow|endraw|endcomment|endschema|endstyle|endstylesheet|endjavascript)[^(%})]+%}"
}
