// LIQUID

{%- comment -%}
  Liquid Comment
{%- endcomment -%}

{% if bool == true %}

{% endif %}

{%- for item in collection.all_tags -%}
  {%- if current_tags contains item -%}
    {{ current_tags.tag | link_to_remove_tag: item }}
  {%- else -%}
    {{ current_tags.tag | link_to_add_tag: item }}
  {%- endif -%}
{%- endfor -%}

// VARIABLES

$filter:  {{ 'bar' | prepend: 'foo/' | json }};
$object:  {{ foo.bar | t }};
$item:    {{ foo.bar }};

// INSIDE CLASS

.element {

  {% if products.title %}
    {%- assign border = '1px $filter' -%}
  {% else %}
      {%- assign border = '1px $item' -%}
  {% endif %}

  background-color: $white;
  border: {{ border | append: '#000000' }};
  display: none;
  position: absolute;

}

// NORMAL

.element {

  background-color: $white;
  border: 1px solid $storm;
  display: none;
  position: absolute;
  right: {{ 'foo' |  json }};

  ul > li {
    display: block;

    a {
      font-size: 0.795rem;
    }
  }
}

@font-face {
  font-family: 'icons';
  src: url('{{ "icons.eot" | asset_url }}');
  src: url('{{ "icons.eot" | asset_url }}#iefix') format("embedded-opentype"),
       url('{{ "icons.woff" | asset_url }}') format("woff"),
       url('{{ "icons.ttf" | asset_url }}') format("truetype"),
       url('{{ "icons.svg" | asset_url }}#timber-icons') format("svg");
  font-weight: normal;
  font-style: normal;
}
