{% comment %}
hello world
{% endcomment %}

<script>
App.section({{ section.id }},
banner: {
buttons: {{ item.banner_buttons }},
interval: {{ item.banner_interval | append: '000' }},
data: [
{% - for block in section.blocks -%}
{
"text": {{ block.settings.text | json }},
"href": {{ block.settings.link | json }}
}
{% - unless forloop.last -%}, {% - endunless -%}
{% - endfor -%}
]
}
})
</script>

<ul>
  {%- for taggg in collection.all_tags -%}
    {%- if current_tags contains taggg -%}
      <li class="active">
        {{ current_tags.tag | link_to_remove_tag: taggg }}
      </li>
    {%- else -%}
      <li>
        {{ current_tags.tag | link_to_add_tag: tag }}
      </li>
    {%- endif -%}
  {%- endfor -%}
</ul>

<div>
  {% for item in collection %}{% endfor %}
</div>

{% stylesheet 'scss' %}

.popover
{

  background-color: $white;
  border: 1px solid $storm;
  display: none;
  position: absolute;
  right: 0;
  top: $navbar-height-desktop - 1;
  z-index: 999;

  ul > li
  {
    display: block;

    a
    {
      font-size: 0.795rem;
    }
  }
}

{% endstylesheet %}

{% javascript %}

import Banner from "banner"
import state from "state"

const test = {

  foo: bar
}

Object.assign(this.bar,
{
  text: `ðŸ’§Liquid: $(check)`,
  command: 'liquid.disableFormatting'
})

export default
{

  state: {
    navbar: {
      active: null
    },
    subnav: {
      show: false
    }
  },
  onLoad()
  {
    this.banner = this.container.querySelector("#banner")
    m.mount(this.banner,
    {

      view: () => {

        m(Banner,
        {

          banner: state.data.header.banner
        })
      }
    })
  }
}

{% endjavascript %}

{% schema %}
{
  "name": "Header",
  "tag": "header",
  "class": "container-fluid header",
  "settings": [
    {
      "type": "header",
      "content": "Main Menu",
      "info": "The navigation to be used for the main menu."
    },
    {
      "type": "link_list",
      "id": "main_menu",
      "default": "main-menu",
      "label": "Select navigation"
    },
    {
      "type": "header",
      "content": "Support",
      "info": "Customize the customer support link and hover block."
    },
    {
      "id": "support_link_text",
      "type": "text",
      "label": "Title"
    },
    {
      "type": "url",
      "id": "support_link_url",
      "label": "URL"
    },
    {
      "type": "link_list",
      "id": "support_block_menu",
      "label": "Links"
    },
    {
      "type": "header",
      "content": "Banner",
      "info": "Customize the banner with sliding text promotions and annoucements."
    },
    {
      "type": "checkbox",
      "id": "banner",
      "label": "Enable",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "banner_buttons",
      "label": "Show Buttons",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "banner_index",
      "label": "Home page only",
      "default": false
    },
    {
      "type": "radio",
      "id": "banner_align",
      "options": [
        {
          "value": "top",
          "label": "Top"
        },
        {
          "value": "bottom",
          "label": "Bottom"
        }
      ],
      "label": "Position",
      "default": "top"
    },
    {
      "type": "range",
      "id": "banner_interval",
      "min": 1,
      "max": 10,
      "step": 1,
      "unit": "sec",
      "label": "Slideshow Interval",
      "default": 4,
      "info": "The banner slideshow is activated when there is more than 1 banner text content block."
    }
  ],
  "blocks": [
    {
      "type": "select",
      "name": "Banner Content",
      "limit": 10,
      "settings": [
        {
          "id": "text",
          "type": "text",
          "label": "Banner Text"
        },
        {
          "type": "url",
          "id": "href",
          "label": "Banner Link",
          "info": "Optional"
        }
      ]
    }
  ]
}
{% endschema %}
